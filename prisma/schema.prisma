// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id
  first_name    String
  family_name   String
  nick_name     String
  userImgUrl    String
  email         String
  password      String
  registered_at DateTime
  created_at    DateTime     @default(now())
  updated_at    DateTime     @default(now())
  posted_user   PostedUser[]
  comments      Comments[]
  favos         Favos[]
}

model Post {
  id          String       @id
  image_url   String
  title       String
  text        String
  posted_at   DateTime
  created_at  DateTime     @default(now())
  updated_at  DateTime     @default(now())
  posted_user PostedUser[]
  comments    Comments[]
  favos       Favos[]
}

model PostedUser {
  id         String   @id
  user_id    String
  //user       User     @relation(fields: [user_id], references: [id])
  post_id    String
  post       Post     @relation(fields: [post_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
}

model Comments {
  id           String   @id
  user_id      String
  //user         User     @relation(fields: [user_id], references: [id])
  post_id      String
  post         Post     @relation(fields: [post_id], references: [id])
  comment      String
  commented_at DateTime
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?
}

model Favos {
  id         String   @id
  user_id    String
  //user       User     @relation(fields: [user_id], references: [id])
  post_id    String
  post       Post     @relation(fields: [post_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
}
